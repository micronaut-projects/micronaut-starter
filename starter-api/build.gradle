plugins {
    id 'io.micronaut.internal.build.starter-openapi-module'
}

dependencies {
    annotationProcessor "io.micronaut.openapi:micronaut-openapi"
    annotationProcessor "com.google.code.findbugs:jsr305"
    annotationProcessor "io.micronaut.serde:micronaut-serde-processor"

    annotationProcessor "io.micronaut.docs:micronaut-docs-asciidoc-config-props:$micronautDocsVersion"
    api platform("io.micronaut:micronaut-bom:$micronautVersion")

    api project(":starter-core"), {
        exclude group:'org.slf4j', module:'slf4j-nop'
    }
    implementation("io.swagger.core.v3:swagger-annotations")
    api "io.micronaut:micronaut-inject"
    api "io.micronaut:micronaut-runtime"
    api "io.micronaut:micronaut-http"
    api "io.micronaut:micronaut-http-client"
    api "io.micronaut:micronaut-validation"
    api group: 'javax.inject', name: 'javax.inject', version: '1'
    implementation "io.projectreactor:reactor-core"

    testCompileOnly "io.micronaut:micronaut-inject-groovy"
    testImplementation "io.micronaut:micronaut-http-server-netty"
    testImplementation "io.micronaut:micronaut-http-client"
    testImplementation "io.micronaut.test:micronaut-test-spock"
    testImplementation "ch.qos.logback:logback-classic:1.2.11"
}

configurations.all {
    resolutionStrategy.dependencySubstitution {
        substitute(module("io.micronaut:micronaut-jackson-databind"))
                .using(module("io.micronaut.serde:micronaut-serde-jackson:$micronautSerdeVersion"))
    }
}