@import io.micronaut.starter.options.BuildTool;
@args(BuildTool buildTool, boolean nativeImage, boolean optimized, String infrastructureModuleName)

#!/bin/bash
EXIT_STATUS=0
@if(buildTool.isGradle() && nativeImage) {
./gradlew :app:buildNativeLambda || EXIT_STATUS=$?
if [ $EXIT_STATUS -ne 0 ]; then
  exit $EXIT_STATUS
fi
./gradlew test || EXIT_STATUS=$?
if [ $EXIT_STATUS -ne 0 ]; then
  exit $EXIT_STATUS
fi
} else if(buildTool.isGradle() && !nativeImage && optimized) {
./gradlew :app:optimizedJitJarAll || EXIT_STATUS=$?
if [ $EXIT_STATUS -ne 0 ]; then
  exit $EXIT_STATUS
fi
} else if(buildTool.isGradle() && !nativeImage) {
./gradlew :app:shadowJar || EXIT_STATUS=$?
if [ $EXIT_STATUS -ne 0 ]; then
  exit $EXIT_STATUS
fi
./gradlew test || EXIT_STATUS=$?
if [ $EXIT_STATUS -ne 0 ]; then
  exit $EXIT_STATUS
fi
} else if(buildTool == BuildTool.MAVEN && nativeImage) {
./mvnw package -Dpackaging=docker-native -Dmicronaut.runtime=lambda -Pgraalvm || EXIT_STATUS=$?
if [ $EXIT_STATUS -ne 0 ]; then
  exit $EXIT_STATUS
fi
./mvnw verify || EXIT_STATUS=$?
if [ $EXIT_STATUS -ne 0 ]; then
  exit $EXIT_STATUS
fi
} else if(buildTool == BuildTool.MAVEN && !nativeImage) {
./mvnw package || EXIT_STATUS=$?
if [ $EXIT_STATUS -ne 0 ]; then
  exit $EXIT_STATUS
fi
./mvnw verify || EXIT_STATUS=$?
if [ $EXIT_STATUS -ne 0 ]; then
  exit $EXIT_STATUS
fi
}
cd @infrastructureModuleName
cdk synth --quiet true
cdk deploy --require-approval never
cd ..
STACK_NAME=MicronautAppStack
API_URL="$(aws cloudformation describe-stacks --stack-name $STACK_NAME --query 'Stacks[0].Outputs[?OutputKey==`MnTestApiUrl`].OutputValue' --output text)"
RESPONSE="$(curl -s $API_URL)"
EXPECTED_RESPONSE='{"message":"Hello World"}'
if [ "$RESPONSE" != "$EXPECTED_RESPONSE" ]; then echo $RESPONSE && exit 1; fi
echo "success"
exit $EXIT_STATUS
