@import io.micronaut.starter.application.Project

@args (
Project project
)

@if (project.getPackageName() != null) {
package @project.getPackageName()

}

import com.agorapulse.permissions.PermissionAdvisor
import com.agorapulse.permissions.PermissionCheckResult
import groovy.transform.CompileStatic
import io.micronaut.core.type.Argument
import io.micronaut.security.authentication.Authentication
import io.micronaut.security.utils.SecurityService
import jakarta.inject.Singleton

@@Singleton
@@CompileStatic
class MessagePermissionAdvisor implements PermissionAdvisor<Message> {

    private final SecurityService securityService

    MessagePermissionAdvisor(SecurityService securityService) {
        this.securityService = securityService
    }

    @@Override
    Argument<Message> argumentType() {
        return Argument.of(Message)
    }

    @@Override
    PermissionCheckResult checkPermissions(String permissionDefinition, Message value, Argument<Message> argument) {
        if (permissionDefinition == 'create') {
            return securityService.authentication
                    .filter { Authentication auth -> auth.name == value.author }
                    .map { PermissionCheckResult.ALLOW }
                    .orElse(PermissionCheckResult.DENY)
        }

        return PermissionCheckResult.UNKNOWN
    }

}