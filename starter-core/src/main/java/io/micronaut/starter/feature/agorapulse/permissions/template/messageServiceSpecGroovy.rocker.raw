@import io.micronaut.starter.application.Project

@args (
Project project
)

@if (project.getPackageName() != null) {
package @project.getPackageName()

}


import com.agorapulse.permissions.PermissionException
import io.micronaut.security.authentication.Authentication
import io.micronaut.security.utils.DefaultSecurityService
import io.micronaut.security.utils.SecurityService
import io.micronaut.test.annotation.MockBean
import io.micronaut.test.extensions.spock.annotation.MicronautTest
import jakarta.inject.Inject
import spock.lang.Specification

@@MicronautTest
class MessageServiceSpec extends Specification {

    Authentication mockAuthentication = Mock {
        name >> 'author'
    }

    @@MockBean(DefaultSecurityService) SecurityService securityService = Mock {
        authentication >> Optional.of(mockAuthentication)
    }

    @@Inject MessageService messageService

    void 'save message with valid author'() {
        given:
        Message message = new Message('author', 'message')
        expect:
        messageService.save(message) == message
    }

    void 'save message with invalid author'() {
        given:
        Message message = new Message('notanauthor', 'message')
        when:
        messageService.save(message)
        then:
        thrown(PermissionException)
    }

}
