@import io.micronaut.starter.application.Project

@args (
Project project
)

@if (project.getPackageName() != null) {
package @project.getPackageName();
}

import com.slack.api.RequestConfigurator
import com.slack.api.methods.MethodsClient
import com.slack.api.methods.request.chat.ChatPostMessageRequest
import com.slack.api.methods.response.chat.ChatPostMessageResponse
import com.slack.api.methods.response.conversations.ConversationsListResponse
import com.slack.api.model.Conversation
import com.slack.api.model.Message
import groovy.transform.CompileDynamic

@@CompileDynamic
class MethodsClientUtil {

    public static final String GENERAL_CHANNEL_ID = 'C123456'

    private static final ThreadLocal<Message> LAST_MESSAGE = new ThreadLocal<>()

    static Message getLastMessage() {
        return LAST_MESSAGE.get()
    }

    static MethodsClient mockClient() {
        return [
                conversationsList: {
                    return new ConversationsListResponse(channels: [
                            new Conversation(id: 'C654321'),
                            new Conversation(id: GENERAL_CHANNEL_ID, general: true),
                    ])
                },

                chatPostMessage  : { RequestConfigurator<ChatPostMessageRequest.ChatPostMessageRequestBuilder> configurator ->
                    ChatPostMessageRequest.ChatPostMessageRequestBuilder requestBuilder = ChatPostMessageRequest.builder()
                    configurator.configure(requestBuilder)
                    ChatPostMessageRequest request = requestBuilder.build()

                    Message message = new Message(text: request.text)

                    LAST_MESSAGE.set(message)

                    ChatPostMessageResponse chatResponse = new ChatPostMessageResponse(
                            channel: request.channel,
                            message: message
                    )

                    return chatResponse
                },
        ] as MethodsClient
    }

}
