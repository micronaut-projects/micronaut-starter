@import io.micronaut.starter.application.Project
@import io.micronaut.starter.build.gradle.GradleBuild
@import io.micronaut.starter.build.gradle.GradlePlugin
@import io.micronaut.starter.build.gradle.GradleDsl
@import java.util.Collection;
@args (Project project, GradleBuild gradleBuild, boolean hasMultiProjectFeature, Collection<String> moduleNames)
@gradleBuild.renderSettingsPluginsManagement()
@if(!gradleBuild.getSettingsPlugins().isEmpty()) {
plugins {
@for (GradlePlugin gradlePlugin : gradleBuild.getSettingsPlugins()) {
@if (gradleBuild.getDsl() == GradleDsl.KOTLIN) {
    id("@gradlePlugin.getId()") @(gradlePlugin.getVersion() != null ? "version(\"" + gradlePlugin.getVersion() + "\")" : "")
} else {
    id "@gradlePlugin.getId()" @(gradlePlugin.getVersion() != null ? "version \"" + gradlePlugin.getVersion() + "\"" : "")
}
}
}
}

@gradleBuild.renderSettingsExtensions()

rootProject.name="@project.getName()"

@if (hasMultiProjectFeature || moduleNames.size() > 1) {
@for (String moduleName : moduleNames) {
include("@moduleName")
}
}
