@import io.micronaut.starter.application.Project

@args (
Project project
)

@if (project.getPackageName() != null) {
package @project.getPackageName()
}

import com.agorapulse.gru.Content
import com.agorapulse.gru.RequestDefinitionBuilder
import com.agorapulse.gru.TestDefinitionBuilder
import com.agorapulse.testing.fixt.Fixt
import com.slack.api.app_backend.SlackSignature
import com.slack.api.app_backend.SlackSignature.HeaderNames

const val GRU_TEST_SIGNING_SECRET = "s3cr3t"

private val SIGNATURE_GENERATOR = SlackSignature.Generator(GRU_TEST_SIGNING_SECRET)

fun slackEvent(unitTest: Class<*>, test: TestDefinitionBuilder, fileName: String): TestDefinitionBuilder {
    val content = Fixt.create(unitTest).readText(fileName)
    val timestamp = (System.currentTimeMillis() / 1000).toString()
    val signature = SIGNATURE_GENERATOR.generate(timestamp, content)

    return test.post(
        "/slack/events"
    ) { req: RequestDefinitionBuilder ->
        req
            .header(HeaderNames.X_SLACK_REQUEST_TIMESTAMP, timestamp)
            .header(HeaderNames.X_SLACK_SIGNATURE, signature)
            .json(Content.inline(content))
    }
}