@import io.micronaut.starter.feature.Features
@import io.micronaut.starter.feature.build.gradle.templates.annotationProcessor
@import io.micronaut.starter.util.VersionInfo

@args (
Features features
)

@if (VersionInfo.getMicronautVersion().endsWith("-SNAPSHOT")) {
@annotationProcessor.template(features, "enforcedPlatform(\"io.micronaut:micronaut-bom:$micronautVersion\")")
} else {
@annotationProcessor.template(features, "platform(\"io.micronaut:micronaut-bom:$micronautVersion\")")
}
@if (features.language().isJava() || features.language().isKotlin()) {
@annotationProcessor.template(features, "\"io.micronaut:micronaut-inject-java\"")
@annotationProcessor.template(features, "\"io.micronaut:micronaut-validation\"")
} else if (features.language().isGroovy()) {
@annotationProcessor.template(features, "\"io.micronaut:micronaut-inject-groovy\"")
}
@if (features.contains("graalvm")) {
@annotationProcessor.template(features, "\"io.micronaut:micronaut-graal\"")
}
@if (features.contains("picocli")) {
@annotationProcessor.template(features, "\"info.picocli:picocli-codegen:4.2.0\"")
}
@if (features.contains("data")) {
@annotationProcessor.template(features, "\"io.micronaut.data:micronaut-data-processor\"")
}
@if (features.contains("openapi")) {
@annotationProcessor.template(features, "\"io.micronaut.openapi:micronaut-openapi\"")
}
@if (features.contains("jax-rs")) {
@annotationProcessor.template(features, "\"io.micronaut.jaxrs:micronaut-jaxrs-processor\"")
}
@if (features.contains("spring")) {
@annotationProcessor.template(features, "\"io.micronaut.spring:micronaut-spring-annotation\"")
}
@if (features.contains("spring-web")) {
@annotationProcessor.template(features, "\"io.micronaut.spring:micronaut-spring-web-annotation\"")
}
@if (features.contains("spring-boot")) {
@annotationProcessor.template(features, "\"io.micronaut.spring:micronaut-spring-boot\"")
}
@if (features.contains("security-annotations")) {
@annotationProcessor.template(features, "\"io.micronaut.security:micronaut-security-annotations\"")
}
@if (features.contains("dekorate-kubernetes")) {
@annotationProcessor.template(features, "\"io.dekorate:kubernetes-annotations:${dekorateVersion}\"")
}
@if (features.contains("dekorate-openshift")) {
@annotationProcessor.template(features, "\"io.dekorate:openshift-annotations:${dekorateVersion}\"")
}
@if (features.contains("dekorate-knative")) {
@annotationProcessor.template(features, "\"io.dekorate:knative-annotations:${dekorateVersion}\"")
}
@if (features.contains("dekorate-prometheus")) {
@annotationProcessor.template(features, "\"io.dekorate:prometheus-annotations:${dekorateVersion}\"")
}
@if (features.contains("dekorate-jaeger")) {
@annotationProcessor.template(features, "\"io.dekorate:jaeger-annotations:${dekorateVersion}\"")
}
@if (features.contains("dekorate-servicecatalog")) {
@annotationProcessor.template(features, "\"io.dekorate:servicecatalog-annotations:${dekorateVersion}\"")
}
@if (features.contains("dekorate-halkyon")) {
@annotationProcessor.template(features, "\"io.dekorate:halkyon-annotations:${dekorateVersion}\"")
}