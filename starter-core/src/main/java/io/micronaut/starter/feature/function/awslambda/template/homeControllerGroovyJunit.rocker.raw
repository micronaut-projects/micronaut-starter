@import io.micronaut.starter.application.Project

@args (
Project project
)

@if (project.getPackageName() != null) {
package @project.getPackageName()
}

import com.amazonaws.serverless.exceptions.ContainerInitializationException
import com.amazonaws.serverless.proxy.internal.testutils.MockLambdaContext
import com.amazonaws.serverless.proxy.model.AwsProxyRequest
import com.amazonaws.serverless.proxy.model.AwsProxyResponse
import com.amazonaws.services.lambda.runtime.Context
import com.fasterxml.jackson.core.JsonProcessingException
import com.fasterxml.jackson.databind.ObjectMapper
import io.micronaut.function.aws.proxy.MicronautLambdaHandler
import org.junit.jupiter.api.AfterAll
import org.junit.jupiter.api.BeforeAll
import org.junit.jupiter.api.Test
import static org.junit.jupiter.api.Assertions.assertEquals;

class HomeControllerTest {

    private static MicronautLambdaHandler handler
    private static Context lambdaContext = new MockLambdaContext()
    private static ObjectMapper objectMapper

    @@BeforeAll
    static void setupSpec() {
        try {
            handler = new MicronautLambdaHandler()
            objectMapper = handler.getApplicationContext().getBean(ObjectMapper.class)

        } catch (ContainerInitializationException e) {
            e.printStackTrace()
        }
    }

    @@AfterAll
    static void cleanupSpec() {
        handler.getApplicationContext().close()
    }

    @@Test
    void testHandler() throws JsonProcessingException {
        AwsProxyRequest request = new AwsProxyRequest()
        request.setHttpMethod("GET")
        request.setPath("/")
        AwsProxyResponse response = handler.handleRequest(request, lambdaContext)
        assertEquals(200, response.getStatusCode().intValue())
        assertEquals("{\"message\":\"Hello World\"}",  response.getBody())
    }
}
