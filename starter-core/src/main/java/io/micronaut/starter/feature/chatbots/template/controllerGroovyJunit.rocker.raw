@import io.micronaut.starter.application.Project
@args (Project project)
@if (project.getPackageName() != null) {
package @project.getPackageName()
}

import io.micronaut.chatbots.telegram.api.send.SendMessage
import io.micronaut.chatbots.telegram.core.TelegramBotConfiguration
import io.micronaut.chatbots.telegram.core.TokenValidator
import io.micronaut.context.BeanContext
import io.micronaut.http.HttpRequest
import io.micronaut.http.HttpResponse
import io.micronaut.http.HttpStatus
import io.micronaut.http.MutableHttpRequest
import io.micronaut.http.client.HttpClient
import io.micronaut.http.client.annotation.Client
import io.micronaut.http.client.exceptions.HttpClientResponseException
import io.micronaut.test.extensions.junit5.annotation.MicronautTest
import jakarta.inject.Inject
import org.junit.jupiter.api.Test

import static org.junit.jupiter.api.Assertions.assertEquals
import static org.junit.jupiter.api.Assertions.assertThrows

@@MicronautTest
class TelegramControllerTest {

    @@Client("/")
    @@Inject
    HttpClient client

    @@Inject
    BeanContext ctx

    @@Test
    void aboutCommandHandlerExists() {
        String token = ctx.getBean(TelegramBotConfiguration.class).token
        MutableHttpRequest<String> post = HttpRequest.POST("/telegram", aboutCommandJson).header(TokenValidator.X_TELEGRAM_BOT_API_SECRET_TOKEN, token)
        HttpResponse<SendMessage> messageResponse = client.toBlocking().exchange(post, SendMessage.class)
        assertEquals("Telegram Bot developed with ðŸ’™ and [Micronaut](https://micronaut.io)", messageResponse.body().text.trim())
    }

    @@Test
    void tokenIsRequired() {
        MutableHttpRequest<String> post = HttpRequest.POST("/telegram", aboutCommandJson)
        HttpClientResponseException httpClientResponseException = assertThrows(HttpClientResponseException.class, () -> client.toBlocking().exchange(post, SendMessage.class))
        assertEquals(HttpStatus.BAD_REQUEST, httpClientResponseException.getStatus())
    }

    private String getAboutCommandJson() {
        TelegramControllerTest.getResourceAsStream("/mockAboutCommand.json").text
    }
}