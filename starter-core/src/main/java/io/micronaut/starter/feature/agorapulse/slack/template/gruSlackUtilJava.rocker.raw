@import io.micronaut.starter.application.Project

@args (
Project project
)

@if (project.getPackageName() != null) {
package @project.getPackageName();
}

import com.agorapulse.gru.Content;
import com.agorapulse.gru.TestDefinitionBuilder;
import com.agorapulse.testing.fixt.Fixt;
import com.slack.api.app_backend.SlackSignature;

import static com.slack.api.app_backend.SlackSignature.HeaderNames.X_SLACK_REQUEST_TIMESTAMP;
import static com.slack.api.app_backend.SlackSignature.HeaderNames.X_SLACK_SIGNATURE;

public class GruSlackUtil {

    public static final String TEST_SIGNING_SECRET = "s3cr3t";

    private static final SlackSignature.Generator SIGNATURE_GENERATOR = new SlackSignature.Generator(TEST_SIGNING_SECRET);

    public static TestDefinitionBuilder slackEvent(Class<?> unitTest, TestDefinitionBuilder test, String fileName) {
        String content = Fixt.create(unitTest).readText(fileName);

        String timestamp = String.valueOf(System.currentTimeMillis() / 1000);
        String signature = SIGNATURE_GENERATOR.generate(timestamp, content);

        return test.post("/slack/events", req -> req
                .header(X_SLACK_REQUEST_TIMESTAMP, timestamp)
                .header(X_SLACK_SIGNATURE, signature)
                .json(Content.inline(content))
        );
    }

}