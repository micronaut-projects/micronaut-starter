@import io.micronaut.starter.application.Project

@args (
Project project
)

@if (project.getPackageName() != null) {
package @project.getPackageName();
}

import com.agorapulse.slack.handlers.MicronautBoltEventHandler;
import com.slack.api.app_backend.events.payload.EventsApiPayload;
import com.slack.api.bolt.context.builtin.EventContext;
import com.slack.api.bolt.response.Response;
import com.slack.api.methods.MethodsClient;
import com.slack.api.methods.SlackApiException;
import com.slack.api.model.event.ReactionAddedEvent;
import jakarta.inject.Singleton;

import java.io.IOException;

@@Singleton
public class ReactionHandler implements MicronautBoltEventHandler<ReactionAddedEvent> {

    private final MethodsClient client;

    public ReactionHandler(MethodsClient client) {
        this.client = client;
    }

    @@Override
    public Class<ReactionAddedEvent> getEventType() {
        return ReactionAddedEvent.class;
    }

    @@Override
    public Response apply(EventsApiPayload<ReactionAddedEvent> event, EventContext context) throws IOException, SlackApiException {
        String channel = event.getEvent().getItem().getChannel();

        client.chatPostMessage(m ->
                m.channel(channel).text(
                        String.format(
                                "Thank you, <@@%s> for your :%s:",
                                event.getEvent().getUser(),
                                event.getEvent().getReaction()
                        )
                )
        );

        return context.ack();
    }

}