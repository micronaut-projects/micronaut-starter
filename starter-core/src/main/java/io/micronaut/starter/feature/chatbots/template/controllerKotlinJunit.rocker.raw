@import io.micronaut.starter.application.Project
@args (Project project)
@if (project.getPackageName() != null) {
package @project.getPackageName();

}

import io.micronaut.chatbots.telegram.api.send.SendMessage
import io.micronaut.chatbots.telegram.core.TelegramBotConfiguration
import io.micronaut.chatbots.telegram.core.TokenValidator
import io.micronaut.context.BeanContext
import io.micronaut.http.HttpRequest
import io.micronaut.http.HttpStatus
import io.micronaut.http.client.HttpClient
import io.micronaut.http.client.annotation.Client
import io.micronaut.http.client.exceptions.HttpClientResponseException
import io.micronaut.test.extensions.junit5.annotation.MicronautTest
import jakarta.inject.Inject
import org.junit.jupiter.api.Assertions.assertEquals
import org.junit.jupiter.api.Assertions.assertThrows
import org.junit.jupiter.api.Test

@@MicronautTest
class TelegramControllerTest {

    @@field:Client("/")
    @@Inject
    lateinit var client: HttpClient

    @@Inject
    lateinit var ctx: BeanContext

    @@Test
    fun aboutCommandHandlerExists() {
        val token = ctx.getBean(TelegramBotConfiguration::class.java).token
        val post = HttpRequest.POST("/telegram", aboutCommandJson)
            .header(TokenValidator.X_TELEGRAM_BOT_API_SECRET_TOKEN, token)
        val messageResponse = client.toBlocking().exchange(post, SendMessage::class.java)
        assertEquals(
            "Telegram Bot developed with ðŸ’™ and [Micronaut](https://micronaut.io)",
            messageResponse.body().text.trim()
        )
    }

    @@Test
    fun tokenIsRequired() {
        val post = HttpRequest.POST("/telegram", aboutCommandJson)
        val httpClientResponseException = assertThrows(HttpClientResponseException::class.java) {
            client.toBlocking().exchange(post, SendMessage::class.java)
        }
        assertEquals(HttpStatus.BAD_REQUEST, httpClientResponseException.status)
    }

    private val aboutCommandJson: String
        get() = """
                {
                  "update_id": 952034417,
                  "message": {
                    "message_id": 447,
                    "from": {
                      "id": 613021175,
                      "is_bot": false,
                      "first_name": "John",
                      "last_name": "Del Amo",
                      "username": "johnsnow",
                      "language_code": "en"
                    },
                    "chat": {
                      "id": 613021175,
                      "first_name": "John",
                      "last_name": "Del Amo",
                      "username": "johnsnow",
                      "type": "private"
                    },
                    "date": 1662545408,
                    "text": "/about",
                    "entities": [
                      {
                        "offset": 0,
                        "length": 6,
                        "type": "bot_command"
                      }
                    ]
                  }
                }
                """.trimIndent()
}