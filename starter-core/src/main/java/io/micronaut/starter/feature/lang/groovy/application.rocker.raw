@import io.micronaut.starter.application.Project
@import io.micronaut.starter.feature.Features
@import io.micronaut.starter.feature.lang.ApplicationRenderingContext

@args (Project project, Features features, ApplicationRenderingContext context)

package @project.getPackageName()

@if (context.isRequired()) {
import io.micronaut.core.annotation.NonNull
import io.micronaut.context.ApplicationContextBuilder
import io.micronaut.context.ApplicationContextConfigurer
import io.micronaut.context.annotation.ContextConfigurer
}
import io.micronaut.runtime.Micronaut
import groovy.transform.CompileStatic
@if (features.contains("openapi")) {
import io.swagger.v3.oas.annotations.*
import io.swagger.v3.oas.annotations.info.*
}
@if (features.contains("json-schema")) {
import io.micronaut.jsonschema.JsonSchemaConfiguration
}


@if (features.contains("openapi")) {
@@OpenAPIDefinition(
    info = @@Info(
            title = "@project.getName()",
            version = "0.0"
    )
)
}
@if (features.contains("json-schema")) {
@@JsonSchemaConfiguration(
    baseUri = "http://localhost:8080/schemas"
)
}
@@CompileStatic
class Application {

@with? (maybeContextConfig = context.getContextConfigurer()) { @maybeContextConfig }
    static void main(String[] args) {
        Micronaut.run(Application, args)
    }
}
