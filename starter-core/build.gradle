plugins {
    id "io.micronaut.internal.starter.published-module"
    id "io.micronaut.internal.starter.convention"
    id "io.micronaut.starter.rocker"
}

sourceSets {
    main {
        rocker {
            srcDir("src/main/java")
        }
    }
}

dependencies {
    api platform("io.micronaut:micronaut-bom:$micronautVersion")
    api "com.fizzed:rocker-runtime:$rockerVersion"
    api "io.micronaut:micronaut-inject"
    api "io.micronaut:micronaut-http"
    api "io.micronaut:micronaut-http-client"
    api "io.github.java-diff-utils:java-diff-utils:4.10"
    api "org.eclipse.jgit:org.eclipse.jgit:5.11.1.202105131744-r"
    implementation "org.yaml:snakeyaml:1.30"
    implementation 'com.typesafe:config:1.4.1'
    implementation 'io.micronaut.testresources:micronaut-test-resources-build-tools:1.0.0-M2'
    implementation 'org.apache.commons:commons-compress:1.21'
    testImplementation("org.codehaus.groovy:groovy-xml")
}

def micronautVersionInfo = tasks.register("micronautVersionInfo", io.micronaut.internal.starter.tasks.WriteMicronautVersionInfoTask) {
    version = micronautVersion
    extraBomProperties = [
            'io.micronaut.grpc:micronaut-grpc',
            'io.micronaut.picocli:micronaut-picocli',
    ]
    outputDirectory = layout.buildDirectory.dir("version-info")
}

sourceSets.main.resources.srcDir(micronautVersionInfo)

rocker {
    javaVersion = '1.8'
    postProcessing = ['io.micronaut.starter.rocker.WhitespaceProcessor']
}

nohttp {
    source.exclude "**/pom.rocker.raw"
    source.exclude "**/genericPom.rocker.raw"
    source.exclude "**/multimodule.rocker.raw"
}
