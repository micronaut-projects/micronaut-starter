import io.micronaut.internal.starter.tasks.WriteMicronautVersionInfoTask

plugins {
    id "io.micronaut.internal.starter.published-module"
    id "io.micronaut.internal.starter.convention"
    id "io.micronaut.starter.rocker"
    id "io.micronaut.internal.starter.coordinates"
}

sourceSets {
    main {
        rocker {
            srcDir("src/main/java")
        }
    }
}

dependencies {

    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")

    api(platform("io.micronaut.platform:micronaut-platform:$micronautVersion"))
    api("com.fizzed:rocker-runtime:$rockerVersion")
    api("io.micronaut:micronaut-inject")
    api("com.fasterxml.jackson.core:jackson-annotations")
    api("io.micronaut:micronaut-http-client")
    api("io.github.java-diff-utils:java-diff-utils:4.12")
    api("org.eclipse.jgit:org.eclipse.jgit:6.8.0.202311291450-r")
    api("org.yaml:snakeyaml")
    api("io.micronaut.serde:micronaut-serde-jackson")

    implementation("com.typesafe:config:1.4.3")
    implementation("io.micronaut.testresources:micronaut-test-resources-build-tools")
    implementation("org.apache.commons:commons-compress:1.27.1")

    testImplementation("org.apache.groovy:groovy-xml")
}

TaskProvider<WriteMicronautVersionInfoTask> micronautVersionInfo = tasks.register("micronautVersionInfo", WriteMicronautVersionInfoTask) {
    version = micronautVersion
    extraBomProperties = [
            'io.micronaut:micronaut-core',
            'io.micronaut.logging:micronaut-logging',
            'io.micronaut.grpc:micronaut-grpc',
            'io.micronaut.picocli:micronaut-picocli',
    ]
    outputDirectory = layout.buildDirectory.dir("version-info")
}

sourceSets.main.resources.srcDir(micronautVersionInfo)

rocker {
    javaVersion = '17'
    postProcessing = ['io.micronaut.starter.rocker.WhitespaceProcessor']
}
