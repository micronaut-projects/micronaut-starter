plugins {
    id "io.micronaut.internal.starter.convention"
    id "application"
    id "war"
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly
    invoker
}

dependencies {
    developmentOnly(platform("io.micronaut.platform:micronaut-platform:$micronautVersion"))
    developmentOnly("io.micronaut.servlet:micronaut-http-server-jetty")

    implementation(project(":starter-api"))
    implementation("io.micronaut:micronaut-inject")
    implementation("io.micronaut.servlet:micronaut-servlet-engine")
    implementation("io.micronaut:micronaut-jackson-databind")

    runtimeOnly("ch.qos.logback:logback-classic")

    testCompileOnly("io.micronaut:micronaut-inject-groovy")

    testImplementation("io.micronaut.servlet:micronaut-http-server-jetty")
    testImplementation("io.micronaut.test:micronaut-test-spock")
    testImplementation("io.micronaut:micronaut-http-client")
}

tasks.named("test", Test) {
    useJUnitPlatform()
    classpath += configurations.developmentOnly
}

application {
    mainClass = "io.micronaut.starter.servlet.Application"
}

tasks.named("run") {
    classpath += configurations.developmentOnly
}
