name: Java CI Func
on:
  push:
    branches:
      - '[1-9]+.[0-9]+.x'
  pull_request:
    branches:
      - '[1-9]+.[0-9]+.x'
jobs:
  test-cli:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: ['8', '11', '17']
    steps:
      - uses: actions/checkout@v2.3.4
#      - uses: actions/cache@v2.1.6
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#            ~/.m2/repository
#          key: ${{ runner.os }}-test-cli-${{ hashFiles('**/*.gradle') }}
#          restore-keys: |
#            ${{ runner.os }}-test-cli-
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java }}
      - name: Run cli create-controller Functional Tests
        run: ./gradlew test-cli:test --refresh-dependencies --parallel --continue
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
  test-core:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: ['8', '11', '17']
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/cache@v2.1.6
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-test-core-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-test-core-
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java }}
      - name: Run app Functional Tests
        run: ./gradlew test-core:test --refresh-dependencies --parallel --continue --tests="io.micronaut.starter.core.test.create.*"
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
  test-aws:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: ['8', '11', '17']
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/cache@v2.1.6
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-test-aws-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-test-aws-
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java }}
      - name: Run app Functional Tests
        run: ./gradlew test-core:test --refresh-dependencies --parallel --continue --tests="io.micronaut.starter.core.test.aws.*"
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
  test-features:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: ['8', '11', '17']
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/cache@v2.1.6
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-test-aws-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-test-aws-
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java }}
      - name: Run app Functional Tests
        run: ./gradlew test-core:test --refresh-dependencies --parallel --continue --tests="io.micronaut.starter.core.test.feature.*"
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
  test-cloud:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: ['8', '11', '17']
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/cache@v2.1.6
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-test-aws-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-test-aws-
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java }}
      - name: Run app Functional Tests
        run: ./gradlew test-core:test --refresh-dependencies --parallel --continue --tests="io.micronaut.starter.core.test.cloud.*"
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
  test-buildTool:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: ['8', '11', '17']
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/cache@v2.1.6
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-test-aws-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-test-aws-
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java }}
      - name: Run app Functional Tests
        run: ./gradlew test-core:test --refresh-dependencies --parallel --continue --tests="io.micronaut.starter.core.test.buildTool.*"
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
