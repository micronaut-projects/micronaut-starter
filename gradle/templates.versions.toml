#
# This version catalog contains all libraries and versions
# which will be used in generated project files (via the
# template engine). It is NOT intended to be used in our
# build scripts (you should use the `libs.versions.toml`
# file for that).
# Entries which start with `bom-` will be assigned the `pom`
# type in Maven.
#

[versions]
agorapulse-gru = "1.4.0"
agorapulse-micronaut-console = "2.0.2-micronaut-3.0"
agorapulse-micronaut-permissions = "1.1.1-micronaut-3.0"
agorapulse-micronaut-slack = "1.0.4-micronaut-3.0"
agorapulse-micronaut-worker = "1.3.0-micronaut-3.0"
aws-cdk-lib = "2.110.1"
apigatewayv2 = "2.110.1-alpha.0"
apigatewayv2-integrations = "2.110.1-alpha.0"
appengine-gradle-plugin = "2.5.0"
asciidoctor-gradle-jvm = "3.3.2"
asciidoctor-maven-plugin = "2.2.5"
asciidoctorj = "2.5.10"
asciidoctorj-diagram = "2.2.13"
awaitility = "4.2.0"
azure-functions-gradle-plugin = "1.13.0"
azure-functions-maven-plugin = "1.26.0"
bom-opentelemetry = "1.14.0-alpha"
bpm-assert = "7.19.0"
bpm-micronaut = "2.14.0"
buildless = "1.0.0-rc2"
camunda-micronaut-client = "2.12.0"
gradle-enterprise = "3.16.2"
gradle-enterprise-maven-custom-data = "1.12.5"
gradle-enterprise-maven-extension = "1.20"
gradle-jrebel-plugin = "1.1.10"
gradle-shadow-plugin = "8.1.1"
jib-gradle-plugin = "2.8.0"
jobrunr = "6.3.4"
jruby = "9.4.5.0"
json-bind = "2.0.0"
jte-gradle-plugin= "3.0.3"
jte-maven-plugin= "3.0.3"
kotest = "4.2.5"
kotlin = "1.9.22"
ksp = "1.9.22-1.0.17"
log4j = "2.19.0"
log4j-slf4j = "2.17.2"
micronaut-aot = "2.0.1"
micronaut-build-plugins = "6.5.7"
micronaut-gradle-plugin = "4.3.0"
mockserver-client-java = "5.15.0"
mockk = "1.9.3"
protobuf-gradle-plugin = "0.9.2"
rewrite-gradle-plugin = "6.6.3"
rewrite-maven-plugin = "5.17.1"
rewrite-micronaut = "2.1.9"
rocker-gradle-plugin = "3.0.4"
rocker-maven-plugin = "1.3.0"
scram-client = "2.1"
slf4j = "1.7.36"
jul-to-slf4j="2.0.9"
slf4j-simple-logger = "2.0.0"
zeebe-micronaut-client = "1.14.0"
ktor = "2.2.4"
jakarta-validation-api = "3.0.2"
spring-boot-gradle-plugin = "3.1.5"
spring-dependency-management-plugin = "1.1.4"
micronaut-starter-aws-cdk = "4.2.4"
spring-boot-starter-parent="3.1.5"
[libraries]
spring-boot-starter-parent = { module = "org.springframework.boot:spring-boot-starter-parent", version.ref = "spring-boot-starter-parent" }
spring-dependency-management-plugin = { module = "io.spring.gradle:dependency-management-plugin", version.ref = "spring-dependency-management-plugin" }
spring-boot-gradle-plugin = { module = "org.springframework.boot:spring-boot-gradle-plugin", version.ref = "spring-boot-gradle-plugin" }
micronaut-starter-aws-cdk = { module = "io.micronaut.starter:micronaut-starter-aws-cdk", version.ref = "micronaut-starter-aws-cdk" }
jakarta-validation-api = { module = "jakarta.validation:jakarta.validation-api", version.ref = "jakarta-validation-api" }
agorapulse-gru = { module = "com.agorapulse:gru-micronaut", version.ref = "agorapulse-gru" }
agorapulse-micronaut-console = { module = "com.agorapulse:micronaut-console", version.ref = "agorapulse-micronaut-console" }
agorapulse-micronaut-permissions = { module = "com.agorapulse:micronaut-permissions", version.ref = "agorapulse-micronaut-permissions" }
agorapulse-micronaut-slack = { module = "com.agorapulse:micronaut-slack-http", version.ref = "agorapulse-micronaut-slack" }
agorapulse-micronaut-worker = { module = "com.agorapulse:micronaut-worker", version.ref = "agorapulse-micronaut-worker" }
aws-cdk-lib = { module = 'software.amazon.awscdk:aws-cdk-lib', version.ref = 'aws-cdk-lib' }
apigatewayv2-alpha = { module = "software.amazon.awscdk:apigatewayv2-alpha", version.ref = "apigatewayv2" }
apigatewayv2-integrations-alpha = { module = "software.amazon.awscdk:apigatewayv2-integrations-alpha", version.ref = "apigatewayv2-integrations" }
appengine-gradle-plugin = { module = "com.google.cloud.tools:appengine-gradle-plugin", version.ref = "appengine-gradle-plugin" }
asciidoctor-gradle-jvm = { module = "org.asciidoctor:asciidoctor-gradle-jvm", version.ref = "asciidoctor-gradle-jvm" }
asciidoctor-maven-plugin = { module = "org.asciidoctor:asciidoctor-maven-plugin", version.ref = "asciidoctor-maven-plugin" }
asciidoctorj = { module = "org.asciidoctor:asciidoctorj", version.ref = "asciidoctorj" }
asciidoctorj-diagram = { module = "org.asciidoctor:asciidoctorj-diagram", version.ref = "asciidoctorj-diagram" }
awaitility = { module = "org.awaitility:awaitility", version.ref = "awaitility" }
awaitility-groovy = { module = "org.awaitility:awaitility-groovy", version.ref = "awaitility" }
awaitility-kotlin = { module = "org.awaitility:awaitility-kotlin", version.ref = "awaitility" }
azure-functions-gradle-plugin = { module = "com.microsoft.azure:azure-functions-gradle-plugin", version.ref = "azure-functions-gradle-plugin" }
azure-functions-maven-plugin = { module = "com.microsoft.azure:azure-functions-maven-plugin", version.ref = "azure-functions-maven-plugin" }
bom-kotlin = { module = "org.jetbrains.kotlin:kotlin-bom", version.ref = "kotlin" }
bom-opentelemetry-instrumentation = { module = "io.opentelemetry.instrumentation:opentelemetry-instrumentation-bom-alpha", version.ref = "bom-opentelemetry" }
bpm-assert = { module = "org.camunda.bpm:camunda-bpm-assert", version.ref = "bpm-assert" }
bpm-micronaut = { module = "info.novatec:micronaut-camunda-bpm-feature", version.ref = "bpm-micronaut" }
camunda-micronaut-client = { module = "info.novatec:micronaut-camunda-external-client-feature", version.ref = "camunda-micronaut-client" }
gradle-enterprise = { module = "com.gradle:gradle-enterprise-gradle-plugin", version.ref = "gradle-enterprise" }
gradle-enterprise-maven = { module = "com.gradle:gradle-enterprise-maven-extension", version.ref = "gradle-enterprise-maven-extension" }
gradle-enterprise-maven-custom-data = { module = "com.gradle:common-custom-user-data-maven-extension", version.ref = "gradle-enterprise-maven-custom-data" }
gradle-jrebel-plugin = { module = "gradle.plugin.org.zeroturnaround:gradle-jrebel-plugin", version.ref = "gradle-jrebel-plugin" }
gradle-shadow-plugin = { module = "gradle.plugin.com.github.johnrengelman:shadow", version.ref = "gradle-shadow-plugin" }
jib-gradle-plugin = { module = "gradle.plugin.com.google.cloud.tools:jib-gradle-plugin", version.ref = "jib-gradle-plugin" }
jobrunr-micronaut = { module = "org.jobrunr:jobrunr-micronaut-feature", version.ref = "jobrunr" }
jruby = { module = "org.jruby:jruby", version.ref = "jruby" }
json-bind = { module = "jakarta.json.bind:jakarta.json.bind-api", version.ref = "json-bind" }
jte-gradle-plugin = { module = "gg.jte:jte-gradle-plugin", version.ref = "jte-gradle-plugin" }
jte-maven-plugin = { module = "gg.jte:jte-maven-plugin", version.ref = "jte-maven-plugin" }
kotest-assertions-core-jvm = { module = "io.kotest:kotest-assertions-core-jvm", version.ref = "kotest" }
kotest-runner-junit5-jvm = { module = "io.kotest:kotest-runner-junit5-jvm", version.ref = "kotest" }
kotlin-allopen = { module = "org.jetbrains.kotlin:kotlin-allopen", version.ref = "kotlin" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
ksp-gradle-plugin = { module = "com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }
kotlin-noarg = { module = "org.jetbrains.kotlin:kotlin-noarg", version.ref = "kotlin" }
log4j-api = { module = "org.apache.logging.log4j:log4j-api", version.ref = "log4j" }
log4j-core = { module = "org.apache.logging.log4j:log4j-core", version.ref = "log4j" }
jul-to-slf4j = { module = "org.slf4j:jul-to-slf4j", version.ref = "jul-to-slf4j" }
log4j-over-slf4j = { module = "org.slf4j:log4j-over-slf4j", version.ref = "slf4j" }
log4j-slf4j = { module = "org.apache.logging.log4j:log4j-slf4j-impl", version.ref = "log4j" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor" }
ktor-serialization-jackson = { module = "io.ktor:ktor-serialization-jackson-jvm", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation-jvm", version.ref = "ktor" }
micronaut-aot = { module = "io.micronaut.aot:micronaut-aot-core", version.ref = "micronaut-aot" }
micronaut-build-plugins = { module = "io.micronaut.build.internal:micronaut-gradle-plugins", version.ref = "micronaut-build-plugins" }
micronaut-crac-plugin = { module = "io.micronaut.gradle:micronaut-crac-plugin", version.ref = "micronaut-gradle-plugin" }
micronaut-gradle-plugin = { module = "io.micronaut.gradle:micronaut-gradle-plugin", version.ref = "micronaut-gradle-plugin" }
micronaut-test-resources-plugin = { module = "io.micronaut.gradle:micronaut-test-resources-plugin", version.ref = "micronaut-gradle-plugin" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
mockserver-client-java = { module = "org.mock-server:mockserver-client-java", version.ref = "mockserver-client-java" }
protobuf-gradle-plugin = { module = "gradle.plugin.com.google.protobuf:protobuf-gradle-plugin", version.ref = "protobuf-gradle-plugin" }
rewrite-gradle-plugin = { module = "org.openrewrite:plugin", version.ref = "rewrite-gradle-plugin" }
rewrite-maven-plugin = { module = "org.openrewrite.maven:rewrite-maven-plugin", version.ref = "rewrite-maven-plugin" }
rewrite-micronaut = { module = "org.openrewrite.recipe:rewrite-micronaut", version.ref = "rewrite-micronaut" }
rocker-gradle-plugin = { module = "nu.studer:gradle-rocker-plugin", version.ref = "rocker-gradle-plugin" }
rocker-maven-plugin = { module = "com.fizzed:rocker-maven-plugin", version.ref = "rocker-maven-plugin" }
scram-client = { module = "com.ongres.scram:client", version.ref = "scram-client" }
slf4j-simple-logger = { module = "io.goodforgod:slf4j-simple-logger", version.ref = "slf4j-simple-logger" }
zeebe-micronaut-client = { module = "info.novatec:micronaut-zeebe-client-feature", version.ref = "zeebe-micronaut-client" }
buildless-gradle-plugin = { module = "build.less:buildless-plugin-gradle", version.ref = "buildless" }

[plugins]
# This is an exception to the rule!
# We use the Gradle plugin both in generated projects and our own build
# so we share the version here
micronaut-application = { id = "io.micronaut.application", version.ref = "micronaut-gradle-plugin" }
