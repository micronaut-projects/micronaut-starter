plugins {
    id "io.micronaut.internal.starter.convention"
    id "com.github.johnrengelman.shadow"
    alias(templateLibs.plugins.micronaut.application)
}

ext.publish = false

micronaut {
    runtime "netty"
}

dependencies {
    implementation project(":starter-api")
    implementation "io.micronaut.gcp:micronaut-gcp-http-client"
    runtimeOnly "ch.qos.logback:logback-classic"
    testCompileOnly "io.micronaut:micronaut-inject-groovy"
    testImplementation "io.micronaut.test:micronaut-test-spock"
    testImplementation "io.micronaut:micronaut-http-client"
}

application {
    mainClass = "io.micronaut.starter.netty.Application"
}

tasks.named('dockerfileNative') {
    baseImage("ghcr.io/graalvm/native-image:ol7-java11-22.3.0")
}

tasks.named("dockerBuildNative") {
    
    images = [project.hasProperty("dockerImageName") ? project.getProperty("dockerImageName") : "micronaut-starter"]
}

tasks.named("dockerBuild") {
    images = [project.hasProperty("dockerImageName") ? project.getProperty("dockerImageName") : "micronaut-starter"]
}

graalvmNative {
    toolchainDetection = false

    binaries {
        main {
            // Main options
            sharedLibrary = false
            imageName = 'micronaut-starter'
            mainClass = 'io.micronaut.starter.netty.Application'
        }
    }
}
