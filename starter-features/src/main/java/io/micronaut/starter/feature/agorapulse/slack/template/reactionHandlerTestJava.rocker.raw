@import io.micronaut.starter.application.Project

@args (
Project project
)

@if (project.getPackageName() != null) {
package @project.getPackageName();
}

import com.slack.api.app_backend.events.payload.ReactionAddedPayload;
import com.slack.api.bolt.context.builtin.EventContext;
import com.slack.api.methods.SlackApiException;
import com.slack.api.model.Message;
import com.slack.api.model.event.ReactionAddedEvent;
import org.junit.jupiter.api.Test;

import java.io.IOException;
import java.util.concurrent.atomic.AtomicReference;

import static org.junit.jupiter.api.Assertions.assertEquals;

class ReactionHandlerTest {

    private final AtomicReference<Message> lastMessage = new AtomicReference<>();

    @@Test
    void testRectionHandler() throws SlackApiException, IOException {
        final ReactionHandler handler = new ReactionHandler(MethodsClientUtil.mockClient(lastMessage::set));

        ReactionAddedEvent.Item item = new ReactionAddedEvent.Item();
        item.setChannel("C123456");

        ReactionAddedEvent event = new ReactionAddedEvent();
        event.setItem(item);
        event.setUser("U123456");
        event.setReaction("thumbsup");

        ReactionAddedPayload payload = new ReactionAddedPayload();
        payload.setEvent(event);

        EventContext context = new EventContext();
        context.setChannelId("C123456");

        handler.apply(payload, context);

        assertEquals("Thank you, <@@U123456> for your :thumbsup:", lastMessage.get().getText());
    }

}