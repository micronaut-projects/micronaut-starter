plugins {
    id "io.micronaut.internal.starter.convention"
    id 'com.google.cloud.tools.jib' version '3.0.0'
    id "application"
}

dependencies {
    annotationProcessor "io.micronaut.data:micronaut-data-processor"
    annotationProcessor "io.micronaut:micronaut-graal"
    annotationProcessor "io.micronaut.serde:micronaut-serde-processor"

    implementation project(":starter-core")
    implementation "io.micronaut:micronaut-http-server-netty"
    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
    implementation("io.micronaut.data:micronaut-data-jdbc")
    implementation 'org.postgresql:postgresql:42.2.20'
    implementation 'com.google.cloud.sql:postgres-socket-factory:1.2.3'
    implementation "io.micronaut.sql:micronaut-jdbc-hikari"
    implementation 'io.micronaut.flyway:micronaut-flyway'
    testCompileOnly "io.micronaut:micronaut-inject-groovy"
    testImplementation "io.micronaut:micronaut-http-client"
    testImplementation "io.micronaut.test:micronaut-test-spock"
    testImplementation "org.testcontainers:postgresql"
    testImplementation "ch.qos.logback:logback-classic:1.2.3"
    testImplementation 'org.reflections:reflections:0.9.12'
}

configurations.all {
    resolutionStrategy.dependencySubstitution {
        substitute(module("io.micronaut:micronaut-jackson-databind"))
                .using(module("io.micronaut.serde:micronaut-serde-jackson:$micronautSerdeVersion"))
    }
}

mainClassName = 'io.micronaut.starter.analytics.postgres.Main'
